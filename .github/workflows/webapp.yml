name: Build and Deploy WebApp

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'apps/webapp/**'
  #     - '.github/workflows/webapp.yml'

env:
  ARTIFACT_NAME: webapp
  ARTIFACT_PATH: dist/webapp
  STORE_PATH: ''

jobs:
  build-webapp:
    runs-on: ubuntu-latest
    container:
      image: botagar/github-actions-imagimaps

    steps:
    - uses: actions/checkout@v3

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm -r install
      env:
        HUSKY: '0'

    - name: Build
      run: pnpm --filter=webapp build

    - name: Assemble WebApp files for packaging
      run: |
        mkdir -p ${{ env.ARTIFACT_PATH }}
        cp -r apps/webapp/dist/static ${{ env.ARTIFACT_PATH }}/static
        cp apps/webapp/dist/html/main/index.html ${{ env.ARTIFACT_PATH }}/index.html

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}
          if-no-files-found: error
          retention-days: 1

  build-bff:
    runs-on: ubuntu-latest
    environment: production
    env:
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    steps:
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to ECR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.ECR_REGISTRY }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        file: Dockerfile.webapp
        build-args: |
          run_args: "--api-only"
        cache-from: type=gha
        cache-to: type=gha,mode=max
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USER }}/imagimaps-bff:latest
          ${{ secrets.DOCKERHUB_USER }}/imagimaps-bff:${{ github.run_number }}
          ${{ env.ECR_REGISTRY }}/imagimap_services_bff:latest
          ${{ env.ECR_REGISTRY }}/imagimap_services_bff:${{ github.run_number }}

  deploy-webapp:
    needs: build-webapp
    runs-on: ubuntu-latest
    environment: production
    container:
      image: botagar/github-actions-imagimaps

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.ARTIFACT_PATH }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Upload to S3
      run: |
        aws s3 cp ./${{ env.ARTIFACT_PATH }} s3://${{ secrets.WEBAPP_S3_BUCKET_NAME }} --recursive
