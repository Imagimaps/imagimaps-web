name: Deploy AWS TF Module

on:
  workflow_call:
    inputs:
      plan_file_name:
        required: true
        type: string
      workspace:
        required: true
        type: string
      working_directory:
        required: true
        type: string
    secrets:
      aws_account_id:
        required: true
      aws_region:
        required: true

permissions:
  id-token: write
  contents: read
  packages: write

defaults:
  run:
    shell: bash

env:
  TF_ENGINE: tofu

jobs:
  deploy-aws-tf-module:
    runs-on: ubuntu-latest
    container:
      image: botagar/github-actions-imagimaps
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Sign into AWS using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.aws_account_id }}:role/org/AutomationRoleManager
          role-session-name: github-actions-imagimaps-infrastructure
          aws-region: ${{ secrets.aws_region }}

      - name: Init TF and Select Workspace
        run: |
          ${{ env.TF_ENGINE }} init \
            -input=false \
            -backend-config="region=${{ secrets.aws_region }}" \
            -backend-config="bucket=tf-state-${{ secrets.aws_region }}-${{ secrets.aws_account_id }}" \
            -backend-config="dynamodb_table=tf-state-lock-${{ secrets.aws_region }}-${{ secrets.aws_account_id }}" \

          ${{ env.TF_ENGINE }} workspace select -or-create ${{ inputs.workspace }}

      - name: Validate TF
        run: ${{ env.TF_ENGINE }} validate

      - name: Plan TF
        run: |
          ${{ env.TF_ENGINE }} plan \
            -input=false \
            -var="aws_account_id=${{ secrets.aws_account_id }}" \
            -var="aws_region=${{ secrets.aws_region }}" \
            -var="oidc_provider_account=${{ github.repository_owner }}" \
            -out=${{ inputs.plan_file_name }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.plan_file_name }}
          path: |
            ${{ env.working-directory }}/${{ inputs.plan_file_name }}
            ${{ env.working-directory }}/.terraform.lock.hcl
          retention-days: 7
        env:
          working-directory: ${{ inputs.working_directory }}

      - name: Apply TF
        run: |
          ${{ env.TF_ENGINE }} apply \
            -input=false \
            ${{ inputs.plan_file_name }}
