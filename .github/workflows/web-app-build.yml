name: WebApp Build

on:
  push:
    branches:
      - main
    paths:
      - 'apps/webapp/**'
      - 'Dockerfile.webapp'
      - '.github/workflows/web-app-build.yml'
  # schedule:
  # - cron: '30 21 * * *' # 07:30 AEST (9:30pm UTC)
  workflow_dispatch:
    inputs:
      build-all:
        type: boolean
        description: Build all artifacts
        required: false
        default: false

permissions:
  id-token: write
  contents: read
  packages: write

defaults:
  run:
    shell: bash

env:
  ARTIFACT_NAME: webapp
  ARTIFACT_PATH: out/webapp

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      webapp: ${{ steps.filter.outputs.webapp }}
      bff: ${{ steps.filter.outputs.bff }}

    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            webapp:
              - 'apps/webapp/**'
              - '!apps/webapp/api/**'
              - 'Dockerfile.webapp'
              - '.github/workflows/web-app-build.yml'
            bff:
              - 'apps/webapp/api/**'

  build-webapp:
    needs:
      - detect-changes
    if: needs.detect-changes.outputs.webapp == 'true' || inputs.build-all == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm -r install
        env:
          HUSKY: '0'

      - name: Build
        run: pnpm --filter=webapp build

      - name: Assemble WebApp files for packaging
        run: |
          mkdir -p ${{ env.ARTIFACT_PATH }}
          cp -r dist/static ${{ env.ARTIFACT_PATH }}/static
          cp dist/html/main/index.html ${{ env.ARTIFACT_PATH }}/index.html

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}
          if-no-files-found: error
          retention-days: 7

  build-bff:
    needs:
      - detect-changes
    if: needs.detect-changes.outputs.bff == 'true' || inputs.build-all == 'true'
    runs-on: ubuntu-latest
    environment: artifacts
    env:
      # target-platforms: linux/amd64,linux/arm64
      target-platforms: linux/arm64
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Container
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.webapp
          push: true
          build-args: |
            run_args: "--api-only"
          target: final
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: ${{ env.target-platforms }}
          tags: |
            ${{ env.ECR_REGISTRY }}/imagimaps/service/webapp-bff:latest
