openapi: 3.0.0
info:
  title: OAuth 2 Token Validator Service API
  description: Service to validate and inspect OAuth 2 tokens for all supported OAuth2 Providers
  version: 0.0.1

servers:
  - url: http://localhost:8081/
    description: Local Development Server

paths:
  /health:
    get:
      summary: Health check
      description: Shallow health check. Reports only the status of this service without consideration of any dependencies.
      operationId: healthCheck
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /token/validate:
    post:
      summary: Validate an OAuth 2 token
      description: Validates an OAuth 2 token for all supported OAuth2 Providers
      operationId: validateToken
      requestBody:
        description: OAuth 2 token to validate
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenValidationRequest'
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenValidationResponse'
        '400':
          description: Invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenValidationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenValidationResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenValidationResponse'

components:
  schemas:
    Provider:
      type: string
      enum:
        - discord
    HealthCheckResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - healthy
            - unhealthy
        version:
          type: string
        date:
          type: string
          format: date-time
        # TODO: Basic System and Runtime Info
        # TODO: Dependencies
    TokenValidationRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
    TokenValidationResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - valid
            - invalid
            - expired
            - revoked
        provider:
          $ref: '#/components/schemas/Provider'
        scopes:
          type: array
          items:
            type: string
        expiresAt:
          type: string
          format: date-time
